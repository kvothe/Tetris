/*----------------------------------------------------------
  --- DATEI: TetrisStatistics.ATG
  --- INHALT: Grammatik f√ºr Tetris Spielstatistiken inklusive Auswertungen
  --- AUTOR: Markus Hofmarcher, 28.11.2011
  ----------------------------------------------------------*/

COMPILER TetrisStatistics

/*----------------------------------------------------------
  --- SCANNER
  ----------------------------------------------------------*/

CHARACTERS
   char 	=   "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz" .
   digit    =   "0123456789" .

TOKENS   
   integer  = digit {digit} .
   float	= digit {digit} "," digit .
   word		= char {char} .
   
COMMENTS FROM "/*" TO "*/" NESTED

IGNORE '\r' + '\n' + '\t'

/*----------------------------------------------------------
  --- PARSER
  ----------------------------------------------------------*/

PRODUCTIONS

TetrisStatistics (. int gameCount = 0; int sumScore = 0; String bestPlayer = ""; int maxScore = 0; String pName = "Max Mustermann"; int pScore = 0; .)
 = "TetrisStatistics" Date Time
 { 
 	(. String player; int score = 0; .)
 	Entry<^player> 
 	(. 
 		// Games Played
 		gameCount++;
 		
 		// Java does not support multiple return values -> use concatenated string as workaround
 		int delPos = player.indexOf("#");
 		score = Integer.parseInt(player.substring(delPos + 1));
 		player = player.substring(0, delPos);
 		
 		// Sum Score
 		sumScore += score;
 		
 		// Best Player
 		if (score > maxScore) {
 			maxScore = score;
 			bestPlayer = player;
 		}
 		
 		// Highest Score of specified player
 		if (player.equals(pName)) {
 			if (score > pScore) {
 				pScore = score;
 			}
 		}
 	.) 
 }
 (. 
 	if (errors.count == 0) {
	 	System.out.println("Tetris Statistics");
	 	System.out.println();
	 	System.out.println("Games Played:\t" + gameCount); 
	 	System.out.println("Average Score:\t" + (float)sumScore / gameCount);
	 	System.out.println("Best Player:\t" + bestPlayer);
	 	System.out.println("---");
	 	System.out.println("Highest Score of '" + pName + "': " + pScore);
	 	System.out.println();
 	} else {
 		System.out.println("-- aborted because " + errors.count + " error" + (errors.count == 1 ? "" : "s") + " occured");
 	}
 .) 
 .

Entry <^String player> (. String name; int score = 0; .) = 
	Name<^name> Mail Date Time Score<^score> [ Comment ] Platform	
	(. 
		player = name + "#" + score; // Java does not support multiple return values -> use concatenated string as workaround 
	.)
	.

Name<^String name> = 
	"#" 
	word (. name = t.val; .) 
	{ word (. name += " " + t.val; .) } 
	"#" .

Mail = word { "." word } "@" word "." word .

Date (. int day, month, year = 0; .) = 
	Day<^day> "." Month<^month> "." Year<^year> 
	(.
		if (day < 1 || month < 1 || year < 1970) {
			SemErr("invalid date");
		} else if (day > 31 || month > 12) {
			SemErr("invalid date");
		}
	.) .

Day<^int day> = integer (. day = Integer.parseInt(t.val); .) .

Month<^int month> = integer (. month = Integer.parseInt(t.val); .) .

Year<^int year> = integer (. year = Integer.parseInt(t.val); .) .

Time (. int hour, minute, second = 0; .) = 
	Hour<^hour> ":" Minute<^minute> ":" Second<^second>
	(. 
		if (hour < 0 || minute < 0 || second < 0) {
			SemErr("invalid time");
		} else if (hour > 23 || minute > 59 || second > 59) {
			SemErr("invalid time");
		}
	.) .

Hour<^int hour> = integer (. hour = Integer.parseInt(t.val); .) .
	
Minute<^int minute> = integer (. minute = Integer.parseInt(t.val); .) .

Second<^int second> = integer (. second = Integer.parseInt(t.val); .) .

Score<^int score> = integer (. score = Integer.parseInt(t.val); .) .

Comment = "#" { word } "#" .

Platform = "PC" | "Android" | "iPhone" | "Playstation" .

/*----------------------------------------------------------*/

END TetrisStatistics .