/*----------------------------------------------------------
  --- DATEI: TetrisStatistics.ATG
  --- INHALT: Grammatik f√ºr Tetris Spielstatistiken inklusive Auswertungen
  --- AUTOR: Markus Hofmarcher, 28.11.2011
  ----------------------------------------------------------*/

COMPILER TetrisStatistics

/*----------------------------------------------------------
  --- SCANNER
  ----------------------------------------------------------*/

CHARACTERS
   char 	=   "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz" .
   digit    =   "0123456789" .

TOKENS   
   integer  = digit {digit} .
   float	= digit {digit} "," digit .
   word		= char {char} .
   
COMMENTS FROM "/*" TO "*/" NESTED

IGNORE '\r' + '\n' + '\t'

/*----------------------------------------------------------
  --- Sample File
  ----------------------------------------------------------*/

/*----------------------------------------------------------

TetrisStatistics 12.12.2011 18:45:04
#Max Mustermann# this@is.mail 11.01.2011 01:52:34 6 # Dies ist ein Comment # PC
#Max Mustermann# this@is.mail 21.05.2011 20:04:11 4 PC
#Max Mustermann# this@is.mail 21.06.2011 14:27:48 33 # Dies ist ein Comment # PC
#Nina Mustermann# this@is.mail 23.08.2011 21:03:04 9 iPhone
#Karl Mustermann# this@is.mail 12.12.2011 18:45:04 12 # Dies ist ein Comment # Android

  ----------------------------------------------------------*/

/*----------------------------------------------------------
  --- PARSER
  ----------------------------------------------------------*/

PRODUCTIONS

TetrisStatistics 
 (. 
 	int gameCount = 0, sumScore = 0, maxScore = 0, pScore = 0, fileErrors = 0; 
 	boolean dateValid = false, timeValid = false; 	
 	String bestPlayer = "", pName = "Max Mustermann"; 	
 .)
 = "TetrisStatistics" Date<^dateValid> Time<^timeValid>
 { 
 	(. String entry; .)
 	Entry<^entry> 
 	(. 
 		// Games Played
 		gameCount++;
 		
 		// Java does not support multiple return values -> use concatenated string as workaround
 		if (entry != null) { 		
	 		int delPos = entry.indexOf("#");
	 		int score = Integer.parseInt(entry.substring(delPos + 1));
	 		String player = entry.substring(0, delPos);
	 		
	 		// Sum Score
	 		sumScore += score;
	 		
	 		// Best Player
	 		if (score > maxScore) {
	 			maxScore = score;
	 			bestPlayer = player;
	 		}
	 		
	 		// Highest Score of specified player
	 		if (player.equals(pName)) {
	 			if (score > pScore) {
	 				pScore = score;
	 			}
	 		}
 		} else {
 			fileErrors++;
 		}
 	.) 
 }
 (. 
 	if (!dateValid || !timeValid) {
 		System.out.println("-- aborted because the file header is invalid");
 	} else if (fileErrors == 0) {
	 	System.out.println("Tetris Statistics");
	 	System.out.println();
	 	System.out.println("Games Played:\t" + gameCount); 
	 	System.out.println("Average Score:\t" + (float)sumScore / gameCount);
	 	System.out.println("Best Player:\t" + bestPlayer);
	 	System.out.println("---");
	 	System.out.println("Highest Score of '" + pName + "': " + pScore);
	 	System.out.println();
 	} else {
 		System.out.println("-- aborted because " + fileErrors + " entr" + (fileErrors == 1 ? "y is" : "ies are") + " invalid");
 	}
 .) 
 .

Entry <^String entry> (. String name; int score = 0; boolean validDate=false; boolean validTime = false; .) = 
	Name<^name> Mail Date<^validDate> Time<^validTime> Score<^score> [ Comment ] Platform	
	(. 		
		// Java does not support multiple return values -> use concatenated string as workaround		
		if (validDate && validTime) {
			entry = name + "#" + score; 
		} else {
			entry = null;
		}
	.)
	.

Name<^String name> = 
	"#" 
	word (. name = t.val; .) 
	{ word (. name += " " + t.val; .) } 
	"#" .

Mail = word { "." word } "@" word "." word .

Date<^boolean valid> (. int day, month, year = 0; .) = 
	Day<^day> "." Month<^month> "." Year<^year> 
	(.
		valid = day >= 1 && day <= 31;
		valid = valid && month >= 1 && month <= 12;
		valid = valid && year >= 1970;		
	.) .

Day<^int day> = integer (. day = Integer.parseInt(t.val); .) .

Month<^int month> = integer (. month = Integer.parseInt(t.val); .) .

Year<^int year> = integer (. year = Integer.parseInt(t.val); .) .

Time<^boolean valid> (. int hour, minute, second = 0; .) = 
	Hour<^hour> ":" Minute<^minute> ":" Second<^second>
	(. 
		valid = hour >= 0 && hour < 24;
		valid = valid && minute >= 0 && minute < 60;
		valid = valid && second >= 0 && second < 60;		
	.) .

Hour<^int hour> = integer (. hour = Integer.parseInt(t.val); .) .
	
Minute<^int minute> = integer (. minute = Integer.parseInt(t.val); .) .

Second<^int second> = integer (. second = Integer.parseInt(t.val); .) .

Score<^int score> = integer (. score = Integer.parseInt(t.val); .) .

Comment = "#" { word } "#" .

Platform = "PC" | "Android" | "iPhone" | "Playstation" .

/*----------------------------------------------------------*/

END TetrisStatistics .